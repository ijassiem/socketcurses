#!/usr/bin/python
'''
Sends date and time info in dictionary over socket
'''

import socket
import time
import datetime
import pickle

#CONSTANTS
IPV4 = socket.AF_INET
TCP = socket.SOCK_STREAM
PORT = 1234
HEADERSIZE = 10
IDSIZE = 5

# ================================================================
# MAIN
# ================================================================
if __name__ == '__main__':

    ###############

    matrix = [
        [0, 'A1', 'A2', 'A4', 'S5', 'S6', 'S7', 'S8', 'S9', 0, 'S11', 'S12', 'S13', 'S14', 'S15', 'S16', 'S17', 'S18'],
        ['L1 out', 1608800000.0, 2608790000.0, 2608780000.0, 2608810000.0, 2608780000.0, 2608780000.0, 2608780000.0,
         2608770000.0, 0, 2608820000.0, 2608800000.0, 2608750000.0, 2608770000.0, 2608790000.0, 2608780000.0,
         2608830000.0, 2608800000.0],
        ['L1  in', 9213.0, 14424.0, 7856.0, 10401.0, 6000.0, 10634.0, 9376.0, 8682.0, 0, 7201.0, 5119.0, 7265.0, 6145.0,
         7322.0, 10590.0, 12263.0, 11196.0],
        ['L2 out', 2434840000.0, 2434830000.0, 2434840000.0, 2434820000.0, 2434850000.0, 2434850000.0, 2434840000.0,
         2434930000.0, 0, 2434850000.0, 2434850000.0, 2434840000.0, 2434800000.0, 2434850000.0, 2434750000.0,
         2434850000.0, 2434850000.0],
        ['L2  in', 3161.0, 24.0, 1131.0, 17.0, 2918.0, 4181.0, 1022.9999999999999, 6492.0, 0, 2151.0, 2729.0, 7751.0,
         2579.0, 3595.0, 1083.0, 1308.0, 2608.0],
        ['L3 out', 2434850000.0, 2434830000.0, 2434840000.0, 2434820000.0, 2434830000.0, 2434850000.0, 2434840000.0,
         2434830000.0, 0, 2434850000.0, 2434850000.0, 2434840000.0, 2434840000.0, 2434850000.0, 2434770000.0,
         2434870000.0, 2434840000.0],
        ['L3  in', 1080.0, 3313.0, 1866.0, 3136.0, 5099.0, 4359.0, 5364.0, 4370.0, 0, 1439.0, 2534.0, 2116.0, 88.0,
         1248.0, 4061.0, 5390.0, 2601.0],
        ['L4 out', 2782710000.0, 2782700000.0, 2782680000.0, 2782650000.0, 2782720000.0, 2782690000.0, 2782680000.0,
         2782670000.0, 0, 2782710000.0, 2782710000.0, 2782680000.0, 2782640000.0, 2782700000.0, 2782630000.0,
         2782710000.0, 2782690000.0],
        ['L4  in', 5543.0, 5553.0, 8179.0, 6015.0, 6578.0, 8937.0, 13379.0, 9082.0, 0, 10246.0, 12314.0, 6527.0, 9900.0,
         5751.0, 2950.0, 6386.0, 13260.0],
        ['L5 out', 44845300.0, 44871600.0, 44806300.0, 44840800.0, 44867000.0, 44828800.0, 44834100.0, 44882500.0, 0,
         44835800.0, 44829200.0, 44762000.0, 44880800.0, 44818500.0, 44833700.0, 44830400.0, 44844900.0],
        ['L5  in', 2477740000.0, 2477720000.0, 2477740000.0, 2477710000.0, 2477730000.0, 2477750000.0, 2477750000.0,
         2477730000.0, 0, 2477740000.0, 2477750000.0, 2477740000.0, 2477750000.0, 2477750000.0, 2477740000.0,
         2477740000.0, 2477750000.0],
        ['L6 out', 39.0, 49.0, 53.0, 42.0, 47.0, 32.0, 38.0, 42.0, 0, 45.0, 56.0, 43.0, 48.0, 49.0, 37.0, 34.0, 36.0],
        ['L6  in', 39.0, 37.0, 33.0, 29.0, 31.0, 47.0, 34.0, 72.0, 0, 65.0, 45.0, 33.0, 51.0, 50.0, 41.0, 33.0, 43.0],
        ['L7 out', 39.0, 43.0, 45.0, 43.0, 38.0, 41.0, 31.0, 44.0, 0, 38.0, 49.0, 45.0, 30.0, 45.0, 47.0, 45.0, 38.0],
        ['L7  in', 50.0, 32.0, 44.0, 48.0, 38.0, 37.0, 29.0, 42.0, 0, 43.0, 35.0, 33.0, 36.0, 46.0, 38.0, 44.0, 44.0],
        ['L8 out', 2477740000.0, 2477730000.0, 2477740000.0, 2477750000.0, 2477730000.0, 2477750000.0, 2477720000.0,
         2477730000.0, 0, 2477740000.0, 2477720000.0, 2477730000.0, 2477720000.0, 2477750000.0, 2477740000.0,
         2477750000.0, 2477740000.0],
        ['L8  in', 1913090000.0, 1913090000.0, 1913090000.0, 1913090000.0, 1913080000.0, 1913090000.0, 1913080000.0,
         1913090000.0, 0, 1913100000.0, 1913080000.0, 1913090000.0, 1913070000.0, 1913100000.0, 1913090000.0,
         1913100000.0, 1913090000.0],
        ['L9 out', 44865000.0, 44878200.0, 44811100.0, 44791300.0, 44788100.0, 44836600.0, 44853700.0, 44955200.0, 0,
         44828400.0, 44782100.0, 44795700.0, 44909900.0, 44831000.0, 44888200.0, 44822100.0, 44865200.0],
        ['L9  in', 2477740000.0, 2477740000.0, 2477750000.0, 2477740000.0, 2477730000.0, 2477750000.0, 2477740000.0,
         2477760000.0, 0, 2477750000.0, 2477670000.0, 2477700000.0, 2477730000.0, 2477750000.0, 2477740000.0,
         2477750000.0, 2477750000.0],
        ['L10 out', 47.0, 30.0, 41.0, 50.0, 47.0, 31.0, 50.0, 43.0, 0, 50.0, 48.0, 42.0, 37.0, 65.0, 33.0, 60.0, 34.0],
        ['L10  in', 47.0, 30.0, 36.0, 32.0, 43.0, 47.0, 57.0, 52.0, 0, 28.0, 34.0, 29.0, 54.0, 46.0, 36.0, 46.0, 43.0],
        ['L11 out', 44.0, 28.0, 80.0, 58.0, 41.0, 38.0, 41.0, 45.0, 0, 25.0, 42.0, 39.0, 31.0, 46.0, 45.0, 34.0, 55.0],
        ['L11  in', 47.0, 28.0, 61.0, 35.0, 31.0, 53.0, 41.0, 38.0, 0, 34.0, 100.0, 73.0, 48.0, 61.0, 37.0, 47.0, 72.0],
        ['L12 out', 2477740000.0, 2477710000.0, 2477750000.0, 2477750000.0, 2477790000.0, 2477720000.0, 2477740000.0,
         2477750000.0, 0, 2477750000.0, 2477710000.0, 2477740000.0, 2477740000.0, 2477750000.0, 2477730000.0,
         2477740000.0, 2477750000.0],
        ['L12  in', 2782690000.0, 2782650000.0, 2782690000.0, 2782680000.0, 2782730000.0, 2782650000.0, 2782670000.0,
         2782680000.0, 0, 2782690000.0, 2782650000.0, 2782670000.0, 2782670000.0, 2782690000.0, 2782670000.0,
         2782670000.0, 2782680000.0],
        ['L13 out', 44824700.0, 44820200.0, 44760800.0, 44752600.0, 44782900.0, 44805000.0, 44818200.0, 44803700.0, 0,
         44789200.0, 44783600.0, 44685300.0, 44848300.0, 44812100.0, 44811800.0, 44811800.0, 44828500.0],
        ['L13  in', 2477750000.0, 2477740000.0, 2477740000.0, 2477740000.0, 2477730000.0, 2477740000.0, 2477740000.0,
         2477890000.0, 0, 2477740000.0, 2477710000.0, 2477680000.0, 2477750000.0, 2477760000.0, 2477690000.0,
         2477740000.0, 2477750000.0],
        ['L14 out', 2477710000.0, 2477750000.0, 2477750000.0, 2477730000.0, 2477730000.0, 2477740000.0, 2477740000.0,
         2477750000.0, 0, 2477740000.0, 2477700000.0, 2477710000.0, 2477690000.0, 2477750000.0, 2477740000.0,
         2477740000.0, 2477750000.0],
        ['L14  in', 2782650000.0, 2782700000.0, 2782680000.0, 2782670000.0, 2782670000.0, 2782680000.0, 2782680000.0,
         2782690000.0, 0, 2782690000.0, 2782640000.0, 2782640000.0, 2782620000.0, 2782680000.0, 2782670000.0,
         2782680000.0, 2782680000.0],
        ['L15 out', 58.0, 36.0, 140.0, 41.0, 19.0, 46.0, 15.0, 19.0, 0, 90.0, 80.0, 43.0, 81.0, 58.0, 56.0, 83.0, 16.0],
        ['L15  in', 25.0, 49.0, 17.0, 43.0, 25.0, 60.0, 30.0, 60.0, 0, 18.0, 44.0, 54.0, 23.0, 44.0, 60.0, 38.0, 33.0],
        ['L16 out', 22.0, 40.0, 119.0, 69.0, 53.0, 49.0, 21.0, 30.0, 0, 32.0, 26.0, 62.0, 21.0, 120.0, 30.0, 38.0,
         149.0],
        ['L16  in', 27.0, 31.0, 94.0, 23.0, 44.0, 74.0, 36.0, 88.0, 0, 37.0, 23.0, 19.0, 74.0, 76.0, 18.0, 57.0, 37.0],
        ['L17 out', 38.0, 56.0, 46.0, 44.0, 39.0, 51.0, 31.0, 32.0, 0, 51.0, 72.0, 37.0, 60.0, 50.0, 41.0, 73.0, 77.0],
        ['L17  in', 69.0, 70.0, 63.0, 51.0, 58.0, 122.0, 50.0, 75.0, 0, 85.0, 97.0, 99.0, 92.0, 77.0, 62.0, 166.0,
         114.0],
        ['L18 out', 44813500.0, 44854900.0, 44803500.0, 44783300.0, 44894000.0, 44788300.0, 44770000.0, 44752600.0, 0,
         44778700.0, 44795400.0, 44704000.0, 44813600.0, 44792300.0, 44825400.0, 44783000.0, 44834200.0],
        ['L18  in', 2477740000.0, 2477740000.0, 2477740000.0, 2477740000.0, 2477730000.0, 2477740000.0, 2477740000.0,
         2477740000.0, 0, 2477750000.0, 2477730000.0, 2477710000.0, 2477730000.0, 2477750000.0, 2477720000.0,
         2477720000.0, 2477710000.0],
        ['L19 out', 2477740000.0, 2477690000.0, 2477850000.0, 2477740000.0, 2477740000.0, 2477750000.0, 2477740000.0,
         2477750000.0, 0, 2477750000.0, 2477730000.0, 2477740000.0, 2477750000.0, 2477750000.0, 2477730000.0,
         2477730000.0, 2477740000.0],
        ['L19  in', 2782680000.0, 2782620000.0, 2782800000.0, 2782680000.0, 2782680000.0, 2782680000.0, 2782680000.0,
         2782690000.0, 0, 2782700000.0, 2782670000.0, 2782670000.0, 2782680000.0, 2782690000.0, 2782670000.0,
         2782670000.0, 2782680000.0],
        ['L20 out', 50.0, 40.0, 30.0, 55.0, 30.0, 39.0, 55.0, 32.0, 0, 61.0, 43.0, 34.0, 26.0, 40.0, 36.0, 48.0, 37.0],
        ['L20  in', 52.0, 51.0, 36.0, 40.0, 29.0, 56.0, 60.0, 80.0, 0, 68.0, 146.0, 84.0, 56.0, 50.0, 34.0, 65.0, 43.0],
        ['L21 out', 0, 0, 0, 0, 0, 23.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        ['L21  in', 0, 0, 0, 0, 0, 25.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        ['L22 out', 0, 0, 0, 0, 0, 23.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        ['L22  in', 0, 0, 0, 0, 0, 25.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        ['L23 out', 40.0, 48.0, 41.0, 43.0, 29.0, 33.0, 30.0, 38.0, 0, 40.0, 37.0, 33.0, 53.0, 33.0, 31.0, 31.0, 32.0],
        ['L23  in', 36097900.0, 36334100.0, 36201700.0, 35967000.0, 36313900.0, 35950300.0, 35840800.0, 36089500.0, 0,
         35904100.0, 35945800.0, 36096500.0, 36137800.0, 35970100.0, 36428400.0, 35905500.0, 36042100.0],
        ['L24 out', 16.0, 17.0, 17.0, 13.0, 19.0, 22.0, 22.0, 41.0, 0, 17.0, 23.0, 24.0, 14.0, 24.0, 37.0, 16.0, 17.0],
        ['L24  in', 18.0, 23.0, 33.0, 25.0, 26.0, 25.0, 20.0, 28.0, 0, 18.0, 27.0, 42.0, 19.0, 26.0, 43.0, 25.0, 28.0],
        ['L25 out', 27.0, 17.0, 17.0, 13.0, 18.0, 22.0, 22.0, 24.0, 0, 25.0, 24.0, 19.0, 14.0, 35.0, 18.0, 22.0, 20.0],
        ['L25  in', 35.0, 36.0, 33.0, 25.0, 25.0, 37.0, 21.0, 28.0, 0, 25.0, 36.0, 20.0, 31.0, 39.0, 24.0, 25.0, 22.0],
        ['L26 out', 25.0, 30.0, 29.0, 23.0, 34.0, 27.0, 22.0, 19.0, 0, 25.0, 23.0, 19.0, 27.0, 24.0, 35.0, 23.0, 24.0],
        ['L26  in', 25.0, 24.0, 23.0, 20.0, 43.0, 27.0, 17.0, 29.0, 0, 27.0, 30.0, 35.0, 18.0, 26.0, 26.0, 30.0, 23.0],
        ['L27 out', 25.0, 35.0, 40.0, 25.0, 35.0, 24.0, 25.0, 40.0, 0, 25.0, 25.0, 24.0, 34.0, 26.0, 35.0, 24.0, 29.0],
        ['L27  in', 37.0, 23.0, 29.0, 16.0, 21.0, 30.0, 17.0, 36.0, 0, 25.0, 25.0, 19.0, 31.0, 26.0, 18.0, 22.0, 30.0],
        ['L28 out', 27.0, 35.0, 28.0, 25.0, 43.0, 22.0, 22.0, 40.0, 0, 27.0, 24.0, 26.0, 34.0, 24.0, 35.0, 24.0, 22.0],
        ['L28  in', 25.0, 34.0, 22.0, 25.0, 29.0, 26.0, 17.0, 30.0, 0, 31.0, 25.0, 28.0, 30.0, 41.0, 18.0, 28.0, 28.0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        ['L32 out', 18.0, 18.0, 18.0, 14.0, 19.0, 18.0, 16.0, 19.0, 0, 26.0, 26.0, 19.0, 15.0, 29.0, 19.0, 27.0, 23.0],
        ['L32  in', 36.0, 42.0, 34.0, 29.0, 27.0, 25.0, 31.0, 29.0, 0, 26.0, 29.0, 20.0, 21.0, 31.0, 20.0, 26.0, 28.0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

    ###############

    s = socket.socket(IPV4, TCP)  # create socket object
    s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)  # allows reuse of address and port

    try:
        print 'Server started...\nPress ctrl+c to exit'
        s.bind(('0.0.0.0', PORT))  # Binding to '0.0.0.0' or '' allows connections from any IP address:
        s.listen(5)  # queue of 5
        clientsocket, address = s.accept()  # accept connection from client
        while True:

           # matrix = [str(datetime.datetime.now()),3,5,6,7]
            matrix[1][1] += 100000000
            msg3 = pickle.dumps(matrix)  # pickles matrix
            msg3 = 'ID01'.ljust(IDSIZE) + msg3  #
            msg3 = str(len(msg3)).ljust(HEADERSIZE) + msg3  # header and id added to data
            clientsocket.send(msg3)  # send message
            print 'Message sent:{}'.format(matrix)
            time.sleep(3)  # 5 sec delay
    except socket.error as e:
        print "Socket Error: %s" % e
    except KeyboardInterrupt as e:
        print("KeyboardInterrupt has been caught.")
    except Exception as e:
        print "Generic error: %s" % e
    finally:
        s.close()



